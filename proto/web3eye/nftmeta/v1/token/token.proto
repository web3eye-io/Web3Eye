syntax = "proto3";

package nftmeta.v1.token;

option go_package = "github.com/web3eye-io/Web3Eye/proto/web3eye/nftmeta/v1/token";
import "google/api/annotations.proto";
import "web3eye/web3eye.proto";
import "web3eye/basetype/v1/chain.proto";

service Manager {
  rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {}
  rpc CreateTokens(CreateTokensRequest) returns (CreateTokensResponse) {}
  rpc UpdateToken(UpdateTokenRequest) returns (UpdateTokenResponse) {}
  rpc UpsertToken(UpsertTokenRequest) returns (UpsertTokenResponse) {}
  rpc UpdateImageVector(UpdateImageVectorRequest) returns (UpdateImageVectorResponse) {
    option (google.api.http) = {
      post : "/v1/update/image/vector"
      body : "*"
    };
  }
  rpc GetToken(GetTokenRequest) returns (GetTokenResponse) {}
  rpc GetTokenOnly(GetTokenOnlyRequest) returns (GetTokenOnlyResponse) {}
  rpc GetTokens(GetTokensRequest) returns (GetTokensResponse) {
    option (google.api.http) = {
      post : "/v1/get/tokens"
      body : "*"
    };
  }
  rpc ExistToken(ExistTokenRequest) returns (ExistTokenResponse) {}
  rpc ExistTokenConds(ExistTokenCondsRequest)
      returns (ExistTokenCondsResponse) {}
  rpc DeleteToken(DeleteTokenRequest) returns (DeleteTokenResponse) {}
}

// for show the state that resource_addr is converted to vector
enum ConvertState {
  Default = 0;
  Waiting = 10;
  Processing = 20;
  Pause = 30;
  Success = 40;
  Failed = 50;
}

message TokenReq {
  optional uint32 ID = 10;
  optional string EntID = 11;
  optional chain.ChainType ChainType = 20;
  optional string ChainID = 30;
  optional string Contract = 40;
  optional chain.TokenType TokenType = 50;
  optional string TokenID = 60;
  optional string Owner = 70;
  optional string URI = 80;
  optional string URIType = 90;
  optional string ImageURL = 100;
  optional string VideoURL = 110;
  optional string Name = 120;
  optional string Description = 130;
  optional ConvertState VectorState = 140;
  optional int64 VectorID = 150;
  optional string Remark = 160;
  optional string IPFSImageURL = 170;
  optional uint32 ImageSnapshotID = 180;
}

message Token {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 11;
  // @inject_tag: sql:"chain_type"
  string ChainTypeStr = 20;
  chain.ChainType ChainType = 21;
  // @inject_tag: sql:"chain_id"
  string ChainID = 30;
  // @inject_tag: sql:"contract"
  string Contract = 40;
  // @inject_tag: sql:"token_type"
  string TokenTypeStr = 50;
  chain.TokenType TokenType = 51;
  // @inject_tag: sql:"token_id"
  string TokenID = 60;
  // @inject_tag: sql:"owner"
  string Owner = 70;
  // @inject_tag: sql:"uri"
  string URI = 80;
  // @inject_tag: sql:"uri_type"
  string URIType = 90;
  // @inject_tag: sql:"image_url"
  string ImageURL = 100;
  // @inject_tag: sql:"video_url"
  string VideoURL = 110;
  // @inject_tag: sql:"description"
  string Description = 120;
  // @inject_tag: sql:"name"
  string Name = 130;
  // @inject_tag: sql:"vector_state"
  string VectorStateStr = 140;
  ConvertState VectorState = 141;
  // @inject_tag: sql:"vector_id"
  int64 VectorID = 150;
  // @inject_tag: sql:"remark"
  string Remark = 160;
  // @inject_tag: sql:"ipfs_image_url"
  string IPFSImageURL = 170;
  // @inject_tag: sql:"image_snapshot_id"
  uint32 ImageSnapshotID = 180;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 190;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 200;
}

message Conds {
  web3eye.Uint32Val ID = 10;
  web3eye.StringVal EntID = 11;
  web3eye.Uint32Val ChainType = 20;
  web3eye.StringVal ChainID = 30;
  web3eye.StringVal Contract = 40;
  web3eye.Uint32Val TokenType = 50;
  web3eye.StringVal TokenID = 60;
  web3eye.StringVal Owner = 70;
  web3eye.StringVal URI = 80;
  web3eye.StringVal URIType = 90;
  web3eye.StringVal ImageURL = 100;
  web3eye.StringVal VideoURL = 110;
  web3eye.StringVal Description = 120;
  web3eye.StringVal Name = 130;
  web3eye.Uint32Val VectorState = 140;
  web3eye.Int64Val VectorID = 150;
  web3eye.StringVal Remark = 160;
  web3eye.StringVal IPFSImageURL = 170;
  web3eye.Uint32Val ImageSnapshotID = 180;
  web3eye.StringSliceVal EntIDs = 190;
  web3eye.Int64SliceVal VectorIDs = 200;
}

message CreateTokenRequest { TokenReq Info = 10; }
message CreateTokenResponse { Token Info = 10; }

message UpsertTokenRequest { TokenReq Info = 10; }
message UpsertTokenResponse { Token Info = 10; }

message CreateTokensRequest { repeated TokenReq Infos = 10; }
message CreateTokensResponse { repeated Token Infos = 10; }

message GetTokenRequest { uint32 ID = 10; }
message GetTokenResponse { Token Info = 10; }

message GetTokensRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetTokensResponse {
  repeated Token Infos = 10;
  uint32 Total = 20;
}

message GetTokenOnlyRequest { Conds Conds = 10; }
message GetTokenOnlyResponse { Token Info = 10; }

message UpdateTokenRequest { TokenReq Info = 10; }
message UpdateTokenResponse { Token Info = 10; }

message UpdateImageVectorRequest { 
  uint32 ID = 10;
  repeated float Vector = 20;
  string Remark = 30;
}

message UpdateImageVectorResponse { Token Info = 10; }

message ExistTokenRequest { uint32 ID = 10; }
message ExistTokenResponse { bool Exist = 10; }

message ExistTokenCondsRequest { Conds Conds = 10; }
message ExistTokenCondsResponse { bool Exist = 10; }

message DeleteTokenRequest { uint32 ID = 10; }
message DeleteTokenResponse { Token Info = 10; }
