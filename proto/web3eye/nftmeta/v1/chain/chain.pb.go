// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: web3eye/nftmeta/v1/chain/chain.proto

package chain

import (
	web3eye "github.com/web3eye-io/Web3Eye/proto/web3eye"
	v1 "github.com/web3eye-io/Web3Eye/proto/web3eye/basetype/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *uint32       `protobuf:"varint,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID     *string       `protobuf:"bytes,11,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	ChainType *v1.ChainType `protobuf:"varint,20,opt,name=ChainType,proto3,enum=chain.ChainType,oneof" json:"ChainType,omitempty"`
	ChainID   *string       `protobuf:"bytes,30,opt,name=ChainID,proto3,oneof" json:"ChainID,omitempty"`
	Simbol    *string       `protobuf:"bytes,40,opt,name=Simbol,proto3,oneof" json:"Simbol,omitempty"`
	Remark    *string       `protobuf:"bytes,50,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *ChainReq) Reset() {
	*x = ChainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainReq) ProtoMessage() {}

func (x *ChainReq) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainReq.ProtoReflect.Descriptor instead.
func (*ChainReq) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{0}
}

func (x *ChainReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *ChainReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *ChainReq) GetChainType() v1.ChainType {
	if x != nil && x.ChainType != nil {
		return *x.ChainType
	}
	return v1.ChainType(0)
}

func (x *ChainReq) GetChainID() string {
	if x != nil && x.ChainID != nil {
		return *x.ChainID
	}
	return ""
}

func (x *ChainReq) GetSimbol() string {
	if x != nil && x.Simbol != nil {
		return *x.Simbol
	}
	return ""
}

func (x *ChainReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32       `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID     string       `protobuf:"bytes,11,opt,name=EntID,proto3" json:"EntID,omitempty"`
	ChainType v1.ChainType `protobuf:"varint,20,opt,name=ChainType,proto3,enum=chain.ChainType" json:"ChainType,omitempty"`
	ChainID   string       `protobuf:"bytes,30,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Simbol    string       `protobuf:"bytes,40,opt,name=Simbol,proto3" json:"Simbol,omitempty"`
	Remark    string       `protobuf:"bytes,50,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *Chain) Reset() {
	*x = Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{1}
}

func (x *Chain) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Chain) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Chain) GetChainType() v1.ChainType {
	if x != nil {
		return x.ChainType
	}
	return v1.ChainType(0)
}

func (x *Chain) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *Chain) GetSimbol() string {
	if x != nil {
		return x.Simbol
	}
	return ""
}

func (x *Chain) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *web3eye.Uint32Val      `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID     *web3eye.StringVal      `protobuf:"bytes,11,opt,name=EntID,proto3" json:"EntID,omitempty"`
	ChainType *web3eye.Uint32Val      `protobuf:"bytes,20,opt,name=ChainType,proto3" json:"ChainType,omitempty"`
	ChainID   *web3eye.StringVal      `protobuf:"bytes,30,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Simbol    *web3eye.StringVal      `protobuf:"bytes,40,opt,name=Simbol,proto3" json:"Simbol,omitempty"`
	Remark    *web3eye.StringVal      `protobuf:"bytes,50,opt,name=Remark,proto3" json:"Remark,omitempty"`
	EntIDs    *web3eye.StringSliceVal `protobuf:"bytes,160,opt,name=EntIDs,proto3" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *web3eye.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *web3eye.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetChainType() *web3eye.Uint32Val {
	if x != nil {
		return x.ChainType
	}
	return nil
}

func (x *Conds) GetChainID() *web3eye.StringVal {
	if x != nil {
		return x.ChainID
	}
	return nil
}

func (x *Conds) GetSimbol() *web3eye.StringVal {
	if x != nil {
		return x.Simbol
	}
	return nil
}

func (x *Conds) GetRemark() *web3eye.StringVal {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *Conds) GetEntIDs() *web3eye.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

type CreateChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ChainReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateChainRequest) Reset() {
	*x = CreateChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainRequest) ProtoMessage() {}

func (x *CreateChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainRequest.ProtoReflect.Descriptor instead.
func (*CreateChainRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChainRequest) GetInfo() *ChainReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Chain `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateChainResponse) Reset() {
	*x = CreateChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainResponse) ProtoMessage() {}

func (x *CreateChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainResponse.ProtoReflect.Descriptor instead.
func (*CreateChainResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{4}
}

func (x *CreateChainResponse) GetInfo() *Chain {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateChainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*ChainReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateChainsRequest) Reset() {
	*x = CreateChainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainsRequest) ProtoMessage() {}

func (x *CreateChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainsRequest.ProtoReflect.Descriptor instead.
func (*CreateChainsRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{5}
}

func (x *CreateChainsRequest) GetInfos() []*ChainReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateChainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Chain `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateChainsResponse) Reset() {
	*x = CreateChainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainsResponse) ProtoMessage() {}

func (x *CreateChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainsResponse.ProtoReflect.Descriptor instead.
func (*CreateChainsResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{6}
}

func (x *CreateChainsResponse) GetInfos() []*Chain {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetChainRequest) Reset() {
	*x = GetChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainRequest) ProtoMessage() {}

func (x *GetChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainRequest.ProtoReflect.Descriptor instead.
func (*GetChainRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{7}
}

func (x *GetChainRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Chain `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetChainResponse) Reset() {
	*x = GetChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainResponse) ProtoMessage() {}

func (x *GetChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainResponse.ProtoReflect.Descriptor instead.
func (*GetChainResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{8}
}

func (x *GetChainResponse) GetInfo() *Chain {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetChainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetChainsRequest) Reset() {
	*x = GetChainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainsRequest) ProtoMessage() {}

func (x *GetChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainsRequest.ProtoReflect.Descriptor instead.
func (*GetChainsRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{9}
}

func (x *GetChainsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetChainsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChainsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetChainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Chain `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetChainsResponse) Reset() {
	*x = GetChainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainsResponse) ProtoMessage() {}

func (x *GetChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainsResponse.ProtoReflect.Descriptor instead.
func (*GetChainsResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{10}
}

func (x *GetChainsResponse) GetInfos() []*Chain {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetChainsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetChainOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetChainOnlyRequest) Reset() {
	*x = GetChainOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainOnlyRequest) ProtoMessage() {}

func (x *GetChainOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetChainOnlyRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{11}
}

func (x *GetChainOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetChainOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Chain `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetChainOnlyResponse) Reset() {
	*x = GetChainOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainOnlyResponse) ProtoMessage() {}

func (x *GetChainOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetChainOnlyResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{12}
}

func (x *GetChainOnlyResponse) GetInfo() *Chain {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ChainReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateChainRequest) Reset() {
	*x = UpdateChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChainRequest) ProtoMessage() {}

func (x *UpdateChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChainRequest.ProtoReflect.Descriptor instead.
func (*UpdateChainRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateChainRequest) GetInfo() *ChainReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Chain `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateChainResponse) Reset() {
	*x = UpdateChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChainResponse) ProtoMessage() {}

func (x *UpdateChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChainResponse.ProtoReflect.Descriptor instead.
func (*UpdateChainResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateChainResponse) GetInfo() *Chain {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistChainRequest) Reset() {
	*x = ExistChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistChainRequest) ProtoMessage() {}

func (x *ExistChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistChainRequest.ProtoReflect.Descriptor instead.
func (*ExistChainRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{15}
}

func (x *ExistChainRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ExistChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=Exist,proto3" json:"Exist,omitempty"`
}

func (x *ExistChainResponse) Reset() {
	*x = ExistChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistChainResponse) ProtoMessage() {}

func (x *ExistChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistChainResponse.ProtoReflect.Descriptor instead.
func (*ExistChainResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{16}
}

func (x *ExistChainResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type ExistChainCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistChainCondsRequest) Reset() {
	*x = ExistChainCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistChainCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistChainCondsRequest) ProtoMessage() {}

func (x *ExistChainCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistChainCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistChainCondsRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{17}
}

func (x *ExistChainCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistChainCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=Exist,proto3" json:"Exist,omitempty"`
}

func (x *ExistChainCondsResponse) Reset() {
	*x = ExistChainCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistChainCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistChainCondsResponse) ProtoMessage() {}

func (x *ExistChainCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistChainCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistChainCondsResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{18}
}

func (x *ExistChainCondsResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type DeleteChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteChainRequest) Reset() {
	*x = DeleteChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChainRequest) ProtoMessage() {}

func (x *DeleteChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChainRequest.ProtoReflect.Descriptor instead.
func (*DeleteChainRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteChainRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Chain `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteChainResponse) Reset() {
	*x = DeleteChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChainResponse) ProtoMessage() {}

func (x *DeleteChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChainResponse.ProtoReflect.Descriptor instead.
func (*DeleteChainResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteChainResponse) GetInfo() *Chain {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_web3eye_nftmeta_v1_chain_chain_proto protoreflect.FileDescriptor

var file_web3eye_nftmeta_v1_chain_chain_proto_rawDesc = []byte{
	0x0a, 0x24, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74,
	0x61, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x1a, 0x15, 0x77, 0x65, 0x62, 0x33, 0x65,
	0x79, 0x65, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x89, 0x02, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x13,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x33,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x69, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x53, 0x69, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x69, 0x6d, 0x62,
	0x6f, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xa7, 0x01,
	0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2e, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x69, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xbf, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x22, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x30, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x55, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x06, 0x53, 0x69, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x52, 0x06, 0x53, 0x69, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65,
	0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x30, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x73, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65,
	0x79, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x52, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x43, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x66,
	0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x46, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x70, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x59,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x66, 0x74,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x12, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2f, 0x0a,
	0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x24,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x66, 0x74, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xe9, 0x06, 0x0a, 0x07, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6e, 0x66,
	0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x12,
	0x26, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12,
	0x23, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0a,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x2e, 0x6e, 0x66, 0x74,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0f, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x6e,
	0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6e, 0x66,
	0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x57,
	0x65, 0x62, 0x33, 0x45, 0x79, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65, 0x62,
	0x33, 0x65, 0x79, 0x65, 0x2f, 0x6e, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_web3eye_nftmeta_v1_chain_chain_proto_rawDescOnce sync.Once
	file_web3eye_nftmeta_v1_chain_chain_proto_rawDescData = file_web3eye_nftmeta_v1_chain_chain_proto_rawDesc
)

func file_web3eye_nftmeta_v1_chain_chain_proto_rawDescGZIP() []byte {
	file_web3eye_nftmeta_v1_chain_chain_proto_rawDescOnce.Do(func() {
		file_web3eye_nftmeta_v1_chain_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_web3eye_nftmeta_v1_chain_chain_proto_rawDescData)
	})
	return file_web3eye_nftmeta_v1_chain_chain_proto_rawDescData
}

var file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_web3eye_nftmeta_v1_chain_chain_proto_goTypes = []interface{}{
	(*ChainReq)(nil),                // 0: nftmeta.v1.chain1.ChainReq
	(*Chain)(nil),                   // 1: nftmeta.v1.chain1.Chain
	(*Conds)(nil),                   // 2: nftmeta.v1.chain1.Conds
	(*CreateChainRequest)(nil),      // 3: nftmeta.v1.chain1.CreateChainRequest
	(*CreateChainResponse)(nil),     // 4: nftmeta.v1.chain1.CreateChainResponse
	(*CreateChainsRequest)(nil),     // 5: nftmeta.v1.chain1.CreateChainsRequest
	(*CreateChainsResponse)(nil),    // 6: nftmeta.v1.chain1.CreateChainsResponse
	(*GetChainRequest)(nil),         // 7: nftmeta.v1.chain1.GetChainRequest
	(*GetChainResponse)(nil),        // 8: nftmeta.v1.chain1.GetChainResponse
	(*GetChainsRequest)(nil),        // 9: nftmeta.v1.chain1.GetChainsRequest
	(*GetChainsResponse)(nil),       // 10: nftmeta.v1.chain1.GetChainsResponse
	(*GetChainOnlyRequest)(nil),     // 11: nftmeta.v1.chain1.GetChainOnlyRequest
	(*GetChainOnlyResponse)(nil),    // 12: nftmeta.v1.chain1.GetChainOnlyResponse
	(*UpdateChainRequest)(nil),      // 13: nftmeta.v1.chain1.UpdateChainRequest
	(*UpdateChainResponse)(nil),     // 14: nftmeta.v1.chain1.UpdateChainResponse
	(*ExistChainRequest)(nil),       // 15: nftmeta.v1.chain1.ExistChainRequest
	(*ExistChainResponse)(nil),      // 16: nftmeta.v1.chain1.ExistChainResponse
	(*ExistChainCondsRequest)(nil),  // 17: nftmeta.v1.chain1.ExistChainCondsRequest
	(*ExistChainCondsResponse)(nil), // 18: nftmeta.v1.chain1.ExistChainCondsResponse
	(*DeleteChainRequest)(nil),      // 19: nftmeta.v1.chain1.DeleteChainRequest
	(*DeleteChainResponse)(nil),     // 20: nftmeta.v1.chain1.DeleteChainResponse
	(v1.ChainType)(0),               // 21: chain.ChainType
	(*web3eye.Uint32Val)(nil),       // 22: web3eye.Uint32Val
	(*web3eye.StringVal)(nil),       // 23: web3eye.StringVal
	(*web3eye.StringSliceVal)(nil),  // 24: web3eye.StringSliceVal
}
var file_web3eye_nftmeta_v1_chain_chain_proto_depIdxs = []int32{
	21, // 0: nftmeta.v1.chain1.ChainReq.ChainType:type_name -> chain.ChainType
	21, // 1: nftmeta.v1.chain1.Chain.ChainType:type_name -> chain.ChainType
	22, // 2: nftmeta.v1.chain1.Conds.ID:type_name -> web3eye.Uint32Val
	23, // 3: nftmeta.v1.chain1.Conds.EntID:type_name -> web3eye.StringVal
	22, // 4: nftmeta.v1.chain1.Conds.ChainType:type_name -> web3eye.Uint32Val
	23, // 5: nftmeta.v1.chain1.Conds.ChainID:type_name -> web3eye.StringVal
	23, // 6: nftmeta.v1.chain1.Conds.Simbol:type_name -> web3eye.StringVal
	23, // 7: nftmeta.v1.chain1.Conds.Remark:type_name -> web3eye.StringVal
	24, // 8: nftmeta.v1.chain1.Conds.EntIDs:type_name -> web3eye.StringSliceVal
	0,  // 9: nftmeta.v1.chain1.CreateChainRequest.Info:type_name -> nftmeta.v1.chain1.ChainReq
	1,  // 10: nftmeta.v1.chain1.CreateChainResponse.Info:type_name -> nftmeta.v1.chain1.Chain
	0,  // 11: nftmeta.v1.chain1.CreateChainsRequest.Infos:type_name -> nftmeta.v1.chain1.ChainReq
	1,  // 12: nftmeta.v1.chain1.CreateChainsResponse.Infos:type_name -> nftmeta.v1.chain1.Chain
	1,  // 13: nftmeta.v1.chain1.GetChainResponse.Info:type_name -> nftmeta.v1.chain1.Chain
	2,  // 14: nftmeta.v1.chain1.GetChainsRequest.Conds:type_name -> nftmeta.v1.chain1.Conds
	1,  // 15: nftmeta.v1.chain1.GetChainsResponse.Infos:type_name -> nftmeta.v1.chain1.Chain
	2,  // 16: nftmeta.v1.chain1.GetChainOnlyRequest.Conds:type_name -> nftmeta.v1.chain1.Conds
	1,  // 17: nftmeta.v1.chain1.GetChainOnlyResponse.Info:type_name -> nftmeta.v1.chain1.Chain
	0,  // 18: nftmeta.v1.chain1.UpdateChainRequest.Info:type_name -> nftmeta.v1.chain1.ChainReq
	1,  // 19: nftmeta.v1.chain1.UpdateChainResponse.Info:type_name -> nftmeta.v1.chain1.Chain
	2,  // 20: nftmeta.v1.chain1.ExistChainCondsRequest.Conds:type_name -> nftmeta.v1.chain1.Conds
	1,  // 21: nftmeta.v1.chain1.DeleteChainResponse.Info:type_name -> nftmeta.v1.chain1.Chain
	3,  // 22: nftmeta.v1.chain1.Manager.CreateChain:input_type -> nftmeta.v1.chain1.CreateChainRequest
	5,  // 23: nftmeta.v1.chain1.Manager.CreateChains:input_type -> nftmeta.v1.chain1.CreateChainsRequest
	13, // 24: nftmeta.v1.chain1.Manager.UpdateChain:input_type -> nftmeta.v1.chain1.UpdateChainRequest
	7,  // 25: nftmeta.v1.chain1.Manager.GetChain:input_type -> nftmeta.v1.chain1.GetChainRequest
	11, // 26: nftmeta.v1.chain1.Manager.GetChainOnly:input_type -> nftmeta.v1.chain1.GetChainOnlyRequest
	9,  // 27: nftmeta.v1.chain1.Manager.GetChains:input_type -> nftmeta.v1.chain1.GetChainsRequest
	15, // 28: nftmeta.v1.chain1.Manager.ExistChain:input_type -> nftmeta.v1.chain1.ExistChainRequest
	17, // 29: nftmeta.v1.chain1.Manager.ExistChainConds:input_type -> nftmeta.v1.chain1.ExistChainCondsRequest
	19, // 30: nftmeta.v1.chain1.Manager.DeleteChain:input_type -> nftmeta.v1.chain1.DeleteChainRequest
	4,  // 31: nftmeta.v1.chain1.Manager.CreateChain:output_type -> nftmeta.v1.chain1.CreateChainResponse
	6,  // 32: nftmeta.v1.chain1.Manager.CreateChains:output_type -> nftmeta.v1.chain1.CreateChainsResponse
	14, // 33: nftmeta.v1.chain1.Manager.UpdateChain:output_type -> nftmeta.v1.chain1.UpdateChainResponse
	8,  // 34: nftmeta.v1.chain1.Manager.GetChain:output_type -> nftmeta.v1.chain1.GetChainResponse
	12, // 35: nftmeta.v1.chain1.Manager.GetChainOnly:output_type -> nftmeta.v1.chain1.GetChainOnlyResponse
	10, // 36: nftmeta.v1.chain1.Manager.GetChains:output_type -> nftmeta.v1.chain1.GetChainsResponse
	16, // 37: nftmeta.v1.chain1.Manager.ExistChain:output_type -> nftmeta.v1.chain1.ExistChainResponse
	18, // 38: nftmeta.v1.chain1.Manager.ExistChainConds:output_type -> nftmeta.v1.chain1.ExistChainCondsResponse
	20, // 39: nftmeta.v1.chain1.Manager.DeleteChain:output_type -> nftmeta.v1.chain1.DeleteChainResponse
	31, // [31:40] is the sub-list for method output_type
	22, // [22:31] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_web3eye_nftmeta_v1_chain_chain_proto_init() }
func file_web3eye_nftmeta_v1_chain_chain_proto_init() {
	if File_web3eye_nftmeta_v1_chain_chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistChainCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistChainCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web3eye_nftmeta_v1_chain_chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web3eye_nftmeta_v1_chain_chain_proto_goTypes,
		DependencyIndexes: file_web3eye_nftmeta_v1_chain_chain_proto_depIdxs,
		MessageInfos:      file_web3eye_nftmeta_v1_chain_chain_proto_msgTypes,
	}.Build()
	File_web3eye_nftmeta_v1_chain_chain_proto = out.File
	file_web3eye_nftmeta_v1_chain_chain_proto_rawDesc = nil
	file_web3eye_nftmeta_v1_chain_chain_proto_goTypes = nil
	file_web3eye_nftmeta_v1_chain_chain_proto_depIdxs = nil
}
