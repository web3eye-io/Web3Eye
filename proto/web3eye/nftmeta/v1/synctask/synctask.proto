syntax = "proto3";

package nftmeta.v1.synctask;

option go_package = "github.com/web3eye-io/Web3Eye/proto/web3eye/nftmeta/v1/synctask";
import "google/api/annotations.proto";
import "web3eye/web3eye.proto";
import "web3eye/basetype/v1/chain.proto";

service Manager {
  rpc CreateSyncTask(CreateSyncTaskRequest) returns (CreateSyncTaskResponse) {
    option (google.api.http) = {
      post : "/v1/create/synctask"
      body : "*"
    };
  }
  rpc TriggerSyncTask(TriggerSyncTaskRequest) returns (TriggerSyncTaskResponse) {}
  rpc UpdateSyncTask(UpdateSyncTaskRequest) returns (UpdateSyncTaskResponse) {
    option (google.api.http) = {
      post : "/v1/update/synctask"
      body : "*"
    };
  }
  rpc GetSyncTask(GetSyncTaskRequest) returns (GetSyncTaskResponse) {
    option (google.api.http) = {
      post : "/v1/get/synctask"
      body : "*"
    };
  }
  rpc GetSyncTaskOnly(GetSyncTaskOnlyRequest)
      returns (GetSyncTaskOnlyResponse) {
    option (google.api.http) = {
      post : "/v1/get/synctask/only"
      body : "*"
    };
  }
  rpc GetSyncTasks(GetSyncTasksRequest) returns (GetSyncTasksResponse) {
    option (google.api.http) = {
      post : "/v1/get/synctasks"
      body : "*"
    };
  }
  rpc ExistSyncTask(ExistSyncTaskRequest) returns (ExistSyncTaskResponse) {
    option (google.api.http) = {
      post : "/v1/exist/synctask"
      body : "*"
    };
  }
  rpc ExistSyncTaskConds(ExistSyncTaskCondsRequest)
      returns (ExistSyncTaskCondsResponse) {
    option (google.api.http) = {
      post : "/v1/exist/synctask/conds"
      body : "*"
    };
  }
  rpc CountSyncTasks(CountSyncTasksRequest) returns (CountSyncTasksResponse) {
    option (google.api.http) = {
      post : "/v1/Count/synctasks"
      body : "*"
    };
  }
  rpc DeleteSyncTask(DeleteSyncTaskRequest) returns (DeleteSyncTaskResponse) {
    option (google.api.http) = {
      post : "/v1/delete/synctask"
      body : "*"
    };
  }
}

message SyncTaskReq {
  optional uint32 ID = 10;
  optional string EntID = 11;
  optional chain.ChainType ChainType = 20;
  optional string ChainID = 30;
  optional uint64 Start = 40;
  optional uint64 End = 50;
  optional uint64 Current = 60;
  optional string Topic = 70;
  optional string Description = 80;
  optional chain.SyncState SyncState = 90;
  optional string Remark = 100;
}

message SyncTask {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 11;
  // @inject_tag: sql:"chain_type"
  string ChainTypeStr = 20;
  chain.ChainType ChainType = 21;
  // @inject_tag: sql:"chain_id"
  string ChainID = 30;
  // @inject_tag: sql:"start"
  uint64 Start = 40;
  // @inject_tag: sql:"end"
  uint64 End = 50;
  // @inject_tag: sql:"current"
  uint64 Current = 60;
  // @inject_tag: sql:"topic"
  string Topic = 70;
  // @inject_tag: sql:"description"
  string Description = 80;
  // @inject_tag: sql:"sync_state"
  string SyncStateStr = 90;
  chain.SyncState SyncState = 91;
  // @inject_tag: sql:"remark"
  string Remark = 100;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 110;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 120;
}

message Conds {
  web3eye.Uint32Val ID = 10;
  web3eye.StringVal EntID = 11;
  web3eye.Uint32Val ChainType = 20;
  web3eye.StringVal ChainID = 30;
  web3eye.Uint64Val Start = 40;
  web3eye.Uint64Val End = 50;
  web3eye.Uint64Val Current = 60;
  web3eye.StringVal Topic = 70;
  web3eye.StringVal Description = 80;
  web3eye.Uint32Val SyncState = 90;
  web3eye.StringVal Remark = 100;
  web3eye.StringSliceVal EntIDs = 110;
}

message CreateSyncTaskRequest { SyncTaskReq Info = 10; }
message CreateSyncTaskResponse { SyncTask Info = 10; }

message TriggerSyncTaskRequest { 
  string Topic = 10;
  uint64 CurrentBlockNum = 20;
}

message TriggerSyncTaskResponse { 
  SyncTask Info = 10;
}

message GetSyncTaskRequest { uint32 ID = 10; }
message GetSyncTaskResponse { SyncTask Info = 10; }

message GetSyncTasksRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetSyncTasksResponse {
  repeated SyncTask Infos = 10;
  uint32 Total = 20;
}

message GetSyncTaskOnlyRequest { Conds Conds = 10; }
message GetSyncTaskOnlyResponse { SyncTask Info = 10; }

message UpdateSyncTaskRequest { SyncTaskReq Info = 10; }
message UpdateSyncTaskResponse { SyncTask Info = 10; }

message ExistSyncTaskRequest { uint32 ID = 10; }
message ExistSyncTaskResponse { bool Exist = 10; }

message ExistSyncTaskCondsRequest { Conds Conds = 10; }
message ExistSyncTaskCondsResponse { bool Exist = 10; }

message CountSyncTasksRequest { Conds Conds = 10; }
message CountSyncTasksResponse { uint32 Info = 10; }

message DeleteSyncTaskRequest { uint32 ID = 10; }
message DeleteSyncTaskResponse { SyncTask Info = 10; }
