// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/google/uuid"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/block"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/contract"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/endpoint"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/order"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/orderitem"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/schema"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/snapshot"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/synctask"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/token"
	"github.com/web3eye-io/Web3Eye/nft-meta/pkg/db/ent/transfer"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	blockMixin := schema.Block{}.Mixin()
	block.Policy = privacy.NewPolicies(blockMixin[0], schema.Block{})
	block.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := block.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	blockMixinFields0 := blockMixin[0].Fields()
	_ = blockMixinFields0
	blockMixinFields1 := blockMixin[1].Fields()
	_ = blockMixinFields1
	blockFields := schema.Block{}.Fields()
	_ = blockFields
	// blockDescCreatedAt is the schema descriptor for created_at field.
	blockDescCreatedAt := blockMixinFields0[0].Descriptor()
	// block.DefaultCreatedAt holds the default value on creation for the created_at field.
	block.DefaultCreatedAt = blockDescCreatedAt.Default.(func() uint32)
	// blockDescUpdatedAt is the schema descriptor for updated_at field.
	blockDescUpdatedAt := blockMixinFields0[1].Descriptor()
	// block.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	block.DefaultUpdatedAt = blockDescUpdatedAt.Default.(func() uint32)
	// block.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	block.UpdateDefaultUpdatedAt = blockDescUpdatedAt.UpdateDefault.(func() uint32)
	// blockDescDeletedAt is the schema descriptor for deleted_at field.
	blockDescDeletedAt := blockMixinFields0[2].Descriptor()
	// block.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	block.DefaultDeletedAt = blockDescDeletedAt.Default.(func() uint32)
	// blockDescEntID is the schema descriptor for ent_id field.
	blockDescEntID := blockMixinFields1[1].Descriptor()
	// block.DefaultEntID holds the default value on creation for the ent_id field.
	block.DefaultEntID = blockDescEntID.Default.(func() uuid.UUID)
	contractMixin := schema.Contract{}.Mixin()
	contract.Policy = privacy.NewPolicies(contractMixin[0], schema.Contract{})
	contract.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := contract.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	contractMixinFields0 := contractMixin[0].Fields()
	_ = contractMixinFields0
	contractMixinFields1 := contractMixin[1].Fields()
	_ = contractMixinFields1
	contractFields := schema.Contract{}.Fields()
	_ = contractFields
	// contractDescCreatedAt is the schema descriptor for created_at field.
	contractDescCreatedAt := contractMixinFields0[0].Descriptor()
	// contract.DefaultCreatedAt holds the default value on creation for the created_at field.
	contract.DefaultCreatedAt = contractDescCreatedAt.Default.(func() uint32)
	// contractDescUpdatedAt is the schema descriptor for updated_at field.
	contractDescUpdatedAt := contractMixinFields0[1].Descriptor()
	// contract.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	contract.DefaultUpdatedAt = contractDescUpdatedAt.Default.(func() uint32)
	// contract.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	contract.UpdateDefaultUpdatedAt = contractDescUpdatedAt.UpdateDefault.(func() uint32)
	// contractDescDeletedAt is the schema descriptor for deleted_at field.
	contractDescDeletedAt := contractMixinFields0[2].Descriptor()
	// contract.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	contract.DefaultDeletedAt = contractDescDeletedAt.Default.(func() uint32)
	// contractDescEntID is the schema descriptor for ent_id field.
	contractDescEntID := contractMixinFields1[1].Descriptor()
	// contract.DefaultEntID holds the default value on creation for the ent_id field.
	contract.DefaultEntID = contractDescEntID.Default.(func() uuid.UUID)
	// contractDescDecimals is the schema descriptor for decimals field.
	contractDescDecimals := contractFields[5].Descriptor()
	// contract.DefaultDecimals holds the default value on creation for the decimals field.
	contract.DefaultDecimals = contractDescDecimals.Default.(uint32)
	endpointMixin := schema.Endpoint{}.Mixin()
	endpoint.Policy = privacy.NewPolicies(endpointMixin[1], schema.Endpoint{})
	endpoint.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := endpoint.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	endpointMixinFields0 := endpointMixin[0].Fields()
	_ = endpointMixinFields0
	endpointMixinFields1 := endpointMixin[1].Fields()
	_ = endpointMixinFields1
	endpointFields := schema.Endpoint{}.Fields()
	_ = endpointFields
	// endpointDescEntID is the schema descriptor for ent_id field.
	endpointDescEntID := endpointMixinFields0[1].Descriptor()
	// endpoint.DefaultEntID holds the default value on creation for the ent_id field.
	endpoint.DefaultEntID = endpointDescEntID.Default.(func() uuid.UUID)
	// endpointDescCreatedAt is the schema descriptor for created_at field.
	endpointDescCreatedAt := endpointMixinFields1[0].Descriptor()
	// endpoint.DefaultCreatedAt holds the default value on creation for the created_at field.
	endpoint.DefaultCreatedAt = endpointDescCreatedAt.Default.(func() uint32)
	// endpointDescUpdatedAt is the schema descriptor for updated_at field.
	endpointDescUpdatedAt := endpointMixinFields1[1].Descriptor()
	// endpoint.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	endpoint.DefaultUpdatedAt = endpointDescUpdatedAt.Default.(func() uint32)
	// endpoint.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	endpoint.UpdateDefaultUpdatedAt = endpointDescUpdatedAt.UpdateDefault.(func() uint32)
	// endpointDescDeletedAt is the schema descriptor for deleted_at field.
	endpointDescDeletedAt := endpointMixinFields1[2].Descriptor()
	// endpoint.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	endpoint.DefaultDeletedAt = endpointDescDeletedAt.Default.(func() uint32)
	// endpointDescRps is the schema descriptor for rps field.
	endpointDescRps := endpointFields[4].Descriptor()
	// endpoint.DefaultRps holds the default value on creation for the rps field.
	endpoint.DefaultRps = endpointDescRps.Default.(uint32)
	orderMixin := schema.Order{}.Mixin()
	order.Policy = privacy.NewPolicies(orderMixin[1], schema.Order{})
	order.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := order.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	orderMixinFields0 := orderMixin[0].Fields()
	_ = orderMixinFields0
	orderMixinFields1 := orderMixin[1].Fields()
	_ = orderMixinFields1
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescEntID is the schema descriptor for ent_id field.
	orderDescEntID := orderMixinFields0[1].Descriptor()
	// order.DefaultEntID holds the default value on creation for the ent_id field.
	order.DefaultEntID = orderDescEntID.Default.(func() uuid.UUID)
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderMixinFields1[0].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() uint32)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderMixinFields1[1].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() uint32)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() uint32)
	// orderDescDeletedAt is the schema descriptor for deleted_at field.
	orderDescDeletedAt := orderMixinFields1[2].Descriptor()
	// order.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	order.DefaultDeletedAt = orderDescDeletedAt.Default.(func() uint32)
	// orderDescTxHash is the schema descriptor for tx_hash field.
	orderDescTxHash := orderFields[2].Descriptor()
	// order.TxHashValidator is a validator for the "tx_hash" field. It is called by the builders before save.
	order.TxHashValidator = orderDescTxHash.Validators[0].(func(string) error)
	// orderDescRecipient is the schema descriptor for recipient field.
	orderDescRecipient := orderFields[6].Descriptor()
	// order.RecipientValidator is a validator for the "recipient" field. It is called by the builders before save.
	order.RecipientValidator = orderDescRecipient.Validators[0].(func(string) error)
	orderitemMixin := schema.OrderItem{}.Mixin()
	orderitem.Policy = privacy.NewPolicies(orderitemMixin[1], schema.OrderItem{})
	orderitem.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := orderitem.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	orderitemMixinFields0 := orderitemMixin[0].Fields()
	_ = orderitemMixinFields0
	orderitemMixinFields1 := orderitemMixin[1].Fields()
	_ = orderitemMixinFields1
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescEntID is the schema descriptor for ent_id field.
	orderitemDescEntID := orderitemMixinFields0[1].Descriptor()
	// orderitem.DefaultEntID holds the default value on creation for the ent_id field.
	orderitem.DefaultEntID = orderitemDescEntID.Default.(func() uuid.UUID)
	// orderitemDescCreatedAt is the schema descriptor for created_at field.
	orderitemDescCreatedAt := orderitemMixinFields1[0].Descriptor()
	// orderitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	orderitem.DefaultCreatedAt = orderitemDescCreatedAt.Default.(func() uint32)
	// orderitemDescUpdatedAt is the schema descriptor for updated_at field.
	orderitemDescUpdatedAt := orderitemMixinFields1[1].Descriptor()
	// orderitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orderitem.DefaultUpdatedAt = orderitemDescUpdatedAt.Default.(func() uint32)
	// orderitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orderitem.UpdateDefaultUpdatedAt = orderitemDescUpdatedAt.UpdateDefault.(func() uint32)
	// orderitemDescDeletedAt is the schema descriptor for deleted_at field.
	orderitemDescDeletedAt := orderitemMixinFields1[2].Descriptor()
	// orderitem.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	orderitem.DefaultDeletedAt = orderitemDescDeletedAt.Default.(func() uint32)
	snapshotMixin := schema.Snapshot{}.Mixin()
	snapshot.Policy = privacy.NewPolicies(snapshotMixin[1], schema.Snapshot{})
	snapshot.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := snapshot.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	snapshotMixinFields0 := snapshotMixin[0].Fields()
	_ = snapshotMixinFields0
	snapshotMixinFields1 := snapshotMixin[1].Fields()
	_ = snapshotMixinFields1
	snapshotFields := schema.Snapshot{}.Fields()
	_ = snapshotFields
	// snapshotDescEntID is the schema descriptor for ent_id field.
	snapshotDescEntID := snapshotMixinFields0[1].Descriptor()
	// snapshot.DefaultEntID holds the default value on creation for the ent_id field.
	snapshot.DefaultEntID = snapshotDescEntID.Default.(func() uuid.UUID)
	// snapshotDescCreatedAt is the schema descriptor for created_at field.
	snapshotDescCreatedAt := snapshotMixinFields1[0].Descriptor()
	// snapshot.DefaultCreatedAt holds the default value on creation for the created_at field.
	snapshot.DefaultCreatedAt = snapshotDescCreatedAt.Default.(func() uint32)
	// snapshotDescUpdatedAt is the schema descriptor for updated_at field.
	snapshotDescUpdatedAt := snapshotMixinFields1[1].Descriptor()
	// snapshot.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	snapshot.DefaultUpdatedAt = snapshotDescUpdatedAt.Default.(func() uint32)
	// snapshot.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	snapshot.UpdateDefaultUpdatedAt = snapshotDescUpdatedAt.UpdateDefault.(func() uint32)
	// snapshotDescDeletedAt is the schema descriptor for deleted_at field.
	snapshotDescDeletedAt := snapshotMixinFields1[2].Descriptor()
	// snapshot.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	snapshot.DefaultDeletedAt = snapshotDescDeletedAt.Default.(func() uint32)
	synctaskMixin := schema.SyncTask{}.Mixin()
	synctask.Policy = privacy.NewPolicies(synctaskMixin[0], schema.SyncTask{})
	synctask.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := synctask.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	synctaskMixinFields0 := synctaskMixin[0].Fields()
	_ = synctaskMixinFields0
	synctaskMixinFields1 := synctaskMixin[1].Fields()
	_ = synctaskMixinFields1
	synctaskFields := schema.SyncTask{}.Fields()
	_ = synctaskFields
	// synctaskDescCreatedAt is the schema descriptor for created_at field.
	synctaskDescCreatedAt := synctaskMixinFields0[0].Descriptor()
	// synctask.DefaultCreatedAt holds the default value on creation for the created_at field.
	synctask.DefaultCreatedAt = synctaskDescCreatedAt.Default.(func() uint32)
	// synctaskDescUpdatedAt is the schema descriptor for updated_at field.
	synctaskDescUpdatedAt := synctaskMixinFields0[1].Descriptor()
	// synctask.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	synctask.DefaultUpdatedAt = synctaskDescUpdatedAt.Default.(func() uint32)
	// synctask.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	synctask.UpdateDefaultUpdatedAt = synctaskDescUpdatedAt.UpdateDefault.(func() uint32)
	// synctaskDescDeletedAt is the schema descriptor for deleted_at field.
	synctaskDescDeletedAt := synctaskMixinFields0[2].Descriptor()
	// synctask.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	synctask.DefaultDeletedAt = synctaskDescDeletedAt.Default.(func() uint32)
	// synctaskDescEntID is the schema descriptor for ent_id field.
	synctaskDescEntID := synctaskMixinFields1[1].Descriptor()
	// synctask.DefaultEntID holds the default value on creation for the ent_id field.
	synctask.DefaultEntID = synctaskDescEntID.Default.(func() uuid.UUID)
	// synctaskDescChainType is the schema descriptor for chain_type field.
	synctaskDescChainType := synctaskFields[0].Descriptor()
	// synctask.DefaultChainType holds the default value on creation for the chain_type field.
	synctask.DefaultChainType = synctaskDescChainType.Default.(string)
	// synctaskDescSyncState is the schema descriptor for sync_state field.
	synctaskDescSyncState := synctaskFields[7].Descriptor()
	// synctask.DefaultSyncState holds the default value on creation for the sync_state field.
	synctask.DefaultSyncState = synctaskDescSyncState.Default.(string)
	tokenMixin := schema.Token{}.Mixin()
	token.Policy = privacy.NewPolicies(tokenMixin[1], schema.Token{})
	token.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := token.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tokenMixinFields0 := tokenMixin[0].Fields()
	_ = tokenMixinFields0
	tokenMixinFields1 := tokenMixin[1].Fields()
	_ = tokenMixinFields1
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescEntID is the schema descriptor for ent_id field.
	tokenDescEntID := tokenMixinFields0[1].Descriptor()
	// token.DefaultEntID holds the default value on creation for the ent_id field.
	token.DefaultEntID = tokenDescEntID.Default.(func() uuid.UUID)
	// tokenDescCreatedAt is the schema descriptor for created_at field.
	tokenDescCreatedAt := tokenMixinFields1[0].Descriptor()
	// token.DefaultCreatedAt holds the default value on creation for the created_at field.
	token.DefaultCreatedAt = tokenDescCreatedAt.Default.(func() uint32)
	// tokenDescUpdatedAt is the schema descriptor for updated_at field.
	tokenDescUpdatedAt := tokenMixinFields1[1].Descriptor()
	// token.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	token.DefaultUpdatedAt = tokenDescUpdatedAt.Default.(func() uint32)
	// token.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	token.UpdateDefaultUpdatedAt = tokenDescUpdatedAt.UpdateDefault.(func() uint32)
	// tokenDescDeletedAt is the schema descriptor for deleted_at field.
	tokenDescDeletedAt := tokenMixinFields1[2].Descriptor()
	// token.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	token.DefaultDeletedAt = tokenDescDeletedAt.Default.(func() uint32)
	// tokenDescVectorState is the schema descriptor for vector_state field.
	tokenDescVectorState := tokenFields[14].Descriptor()
	// token.DefaultVectorState holds the default value on creation for the vector_state field.
	token.DefaultVectorState = tokenDescVectorState.Default.(string)
	transferMixin := schema.Transfer{}.Mixin()
	transfer.Policy = privacy.NewPolicies(transferMixin[1], schema.Transfer{})
	transfer.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := transfer.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	transferMixinFields0 := transferMixin[0].Fields()
	_ = transferMixinFields0
	transferMixinFields1 := transferMixin[1].Fields()
	_ = transferMixinFields1
	transferFields := schema.Transfer{}.Fields()
	_ = transferFields
	// transferDescEntID is the schema descriptor for ent_id field.
	transferDescEntID := transferMixinFields0[1].Descriptor()
	// transfer.DefaultEntID holds the default value on creation for the ent_id field.
	transfer.DefaultEntID = transferDescEntID.Default.(func() uuid.UUID)
	// transferDescCreatedAt is the schema descriptor for created_at field.
	transferDescCreatedAt := transferMixinFields1[0].Descriptor()
	// transfer.DefaultCreatedAt holds the default value on creation for the created_at field.
	transfer.DefaultCreatedAt = transferDescCreatedAt.Default.(func() uint32)
	// transferDescUpdatedAt is the schema descriptor for updated_at field.
	transferDescUpdatedAt := transferMixinFields1[1].Descriptor()
	// transfer.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	transfer.DefaultUpdatedAt = transferDescUpdatedAt.Default.(func() uint32)
	// transfer.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	transfer.UpdateDefaultUpdatedAt = transferDescUpdatedAt.UpdateDefault.(func() uint32)
	// transferDescDeletedAt is the schema descriptor for deleted_at field.
	transferDescDeletedAt := transferMixinFields1[2].Descriptor()
	// transfer.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	transfer.DefaultDeletedAt = transferDescDeletedAt.Default.(func() uint32)
	// transferDescContract is the schema descriptor for contract field.
	transferDescContract := transferFields[2].Descriptor()
	// transfer.ContractValidator is a validator for the "contract" field. It is called by the builders before save.
	transfer.ContractValidator = transferDescContract.Validators[0].(func(string) error)
	// transferDescFrom is the schema descriptor for from field.
	transferDescFrom := transferFields[5].Descriptor()
	// transfer.FromValidator is a validator for the "from" field. It is called by the builders before save.
	transfer.FromValidator = transferDescFrom.Validators[0].(func(string) error)
	// transferDescTo is the schema descriptor for to field.
	transferDescTo := transferFields[6].Descriptor()
	// transfer.ToValidator is a validator for the "to" field. It is called by the builders before save.
	transfer.ToValidator = transferDescTo.Validators[0].(func(string) error)
	// transferDescLogIndex is the schema descriptor for log_index field.
	transferDescLogIndex := transferFields[12].Descriptor()
	// transfer.DefaultLogIndex holds the default value on creation for the log_index field.
	transfer.DefaultLogIndex = transferDescLogIndex.Default.(uint32)
}

const (
	Version = "v0.11.2" // Version of ent codegen.
)
